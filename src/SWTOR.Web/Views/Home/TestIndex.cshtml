@{
    ViewBag.Title = "Test Async File Upload";
    Layout = "../Shared/_Layout.cshtml";
}

<h2>Test Async File Upload</h2>
<form id="upload" action="/API/Parse" method="POST" enctype="multipart/form-data">

<fieldset>
<legend>HTML File Upload</legend>

<input type="hidden" id="MAX_FILE_SIZE" name="MAX_FILE_SIZE" value="300000" />

<div>
	<label for="fileselect">Files to upload:</label>
	<input type="file" id="fileselect" name="fileselect[]" multiple="multiple" />
	<div id="filedrag">or drop files here</div>
</div>

<div id="submitbutton">
	<button type="submit">Upload Files</button>
</div>

</fieldset>

</form>

<div id="messages">
<p>Status Messages</p>
</div>
<script>
    (function () {

        // getElementById
        function $id(id) {
            return document.getElementById(id);
        }


        // output information
        function Output(msg) {
            var m = $id("messages");
            m.innerHTML = msg + m.innerHTML;
        }


        // file drag hover
        function FileDragHover(e) {
            e.stopPropagation();
            e.preventDefault();
            e.target.className = (e.type == "dragover" ? "hover" : "");
        }


        // file selection
        function FileSelectHandler(e) {

            // cancel event and hover styling
            FileDragHover(e);

            // fetch FileList object
            var files = e.target.files || e.dataTransfer.files;

            // process all File objects
            for (var i = 0, f; f = files[i]; i++) {
                SendFile(f);
            }

        }


        // output file information
        function SendFile(file) {
            var xhr = new XMLHttpRequest();
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    var data = eval(xhr.responseText);
                    var newContent = '<table border=1>';
                    newContent += '<tr><th>Timestamp</th><th>Source</th><th>Target</th><th>Ability</th><th>Event</th><th>Effect</th><th>Result</th>';
                    newContent += '<th>Amount</th><th>Type</th><th>IsCritical</th><th>Threat</th></tr>';

                    for (var item in data) {
                        var e = data[item];
                        newContent += '<tr>';
                        newContent += '<td>' + new Date(parseInt(e.timestamp.substr(6))) + '</td>';
                        newContent += '<td>' + e.source.name + '</td>';
                        newContent += '<td>' + e.target.name + '</td>';
                        newContent += '<td>' + e.ability.name + '</td>';
                        newContent += '<td>' + e.event.name + '</td>';
                        newContent += '<td>' + e.event.effect.name + '</td>';
                        newContent += '<td>' + e.event.result.name + '</td>';
                        newContent += '<td>' + e.event.result.amount + '</td>';
                        newContent += '<td>' + e.event.result.type + '</td>';
                        newContent += '<td>' + e.event.result.isCritical + '</td>';
                        newContent += '<td>' + e.event.threat + '</td>';
                        newContent += '</tr>';
                    }
                    newContent += '</table>';
                    $id("messages").innerHTML += newContent;
                }
            };



            xhr.open('POST', '/API/Parse', true);
            xhr.send(file);

        }


        // initialize
        function Init() {

            var fileselect = $id("fileselect"),
			filedrag = $id("filedrag"),
			submitbutton = $id("submitbutton");

            // file select
            fileselect.addEventListener("change", FileSelectHandler, false);

            // is XHR2 available?
            var xhr = new XMLHttpRequest();
            if (xhr.upload) {

                // file drop
                filedrag.addEventListener("dragover", FileDragHover, false);
                filedrag.addEventListener("dragleave", FileDragHover, false);
                filedrag.addEventListener("drop", FileSelectHandler, false);
                filedrag.style.display = "block";
            }

        }

        // call initialization file
        if (window.File && window.FileList && window.FileReader) {
            Init();
        }


    })();
</script>