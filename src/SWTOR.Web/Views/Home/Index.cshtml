@{
    ViewBag.Title = "Index";
}

<link href="@Url.Content("~/Content/css/ui-lightness/jquery-ui-1.8.14.custom.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/css/fileUploader.css")" rel="stylesheet" type="text/css" />
 
<script src="@Url.Content("~//Scripts/jquery-1.6.2.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~//Scripts/jquery-ui-1.8.14.custom.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.fileUploader.js")" type="text/javascript"></script>

<h2>SWTOR Combat Log Parser</h2>

<p>This website will accept the text of a combat log and then parse the log into JSON objects. 
 The API can be called from any other website, simply "View Source" on this page for an example of how it can be done.
 the table being output below is not at all inclusive of all parsed data, it is merely meant to prove that the parsing works.</p>

<p>If you do not have a log of your own, simply click on the sample data button and we'll load a small sample log for you.
</p>

<form id="combatForm" method="post" action="/API/ParseText">
    <textarea id="combatLog" name="combatLog" style="width:100%;height:400px;"></textarea><br />
    <input type="submit" value="Parse Log" />
    <input type="button" onclick="loadData();" value="Load Sample Data" />
    
<fieldset>
<legend>HTML File Upload</legend>

<input type="hidden" id="MAX_FILE_SIZE" name="MAX_FILE_SIZE" value="300000" />

<div>
    <label for="fileselect">Files to upload:</label>
	<input type="file" id="fileselect" name="fileselect[]" multiple="multiple" />
	<div id="filedrag">or drop files here</div>
</div>

</fieldset>

</form>

<br />
<div id="output">
    
</div>

<script type="text/javascript">
    $(document).ready(
        function () {

            // call initialization file
            if (window.File && window.FileList && window.FileReader) {
                Init();
            }

            $("#combatForm").ajaxForm({
                dataType: 'json',
                success: function (data) {
                    var newContent = '<table border=1>';
                    newContent += '<tr><th>Timestamp</th><th>Source</th><th>Target</th><th>Ability</th><th>Event</th><th>Effect</th><th>Result</th>';
                    newContent += '<th>Amount</th><th>Type</th><th>IsCritical</th><th>Threat</th></tr>';
                    for (var item in data) {
                        var e = data[item];
                        newContent += '<tr>';
                        newContent += '<td>' + new Date(parseInt(e.timestamp.substr(6))) + '</td>';
                        newContent += '<td>' + e.source.name + '</td>';
                        newContent += '<td>' + e.target.name + '</td>';
                        newContent += '<td>' + e.ability.name + '</td>';
                        newContent += '<td>' + e.event.name + '</td>';
                        newContent += '<td>' + e.event.effect.name + '</td>';
                        newContent += '<td>' + e.event.result.name + '</td>';
                        newContent += '<td>' + e.event.result.amount + '</td>';
                        newContent += '<td>' + e.event.result.type + '</td>';
                        newContent += '<td>' + e.event.result.isCritical + '</td>';
                        newContent += '<td>' + e.event.threat + '</td>';
                        newContent += '</tr>';
                    }
                    newContent += '</table>';
                    $('#output').html(newContent);
                }
            });
        }
    );
</script>
<script>
    function $id(id) {
        return document.getElementById(id);
    }


    // output information

    function Output(msg) {
        var m = $id("messages");
        m.innerHTML = msg + m.innerHTML;
    }


    // file drag hover

    function FileDragHover(e) {
        e.stopPropagation();
        e.preventDefault();
        e.target.className = (e.type == "dragover" ? "hover" : "");
    }


    // file selection

    function FileSelectHandler(e) {

        // cancel event and hover styling
        FileDragHover(e);

        // fetch FileList object
        var files = e.target.files || e.dataTransfer.files;

        // process all File objects
        for (var i = 0, f; f = files[i]; i++) {
            SendFile(f);
        }

    }


    // output file information

    function SendFile(file) {
        var xhr = new XMLHttpRequest();
        xhr.onreadystatechange = function () {
            if (xhr.readyState == 4 && xhr.status == 200) {
                var data = eval(xhr.responseText);
                var newContent = '<table border=1>';
                newContent += '<tr><th>Timestamp</th><th>Source</th><th>Target</th><th>Ability</th><th>Event</th><th>Effect</th><th>Result</th>';
                newContent += '<th>Amount</th><th>Type</th><th>IsCritical</th><th>Threat</th></tr>';

                for (var item in data) {
                    var e = data[item];
                    newContent += '<tr>';
                    newContent += '<td>' + new Date(parseInt(e.timestamp.substr(6))) + '</td>';
                    newContent += '<td>' + e.source.name + '</td>';
                    newContent += '<td>' + e.target.name + '</td>';
                    newContent += '<td>' + e.ability.name + '</td>';
                    newContent += '<td>' + e.event.name + '</td>';
                    newContent += '<td>' + e.event.effect.name + '</td>';
                    newContent += '<td>' + e.event.result.name + '</td>';
                    newContent += '<td>' + e.event.result.amount + '</td>';
                    newContent += '<td>' + e.event.result.type + '</td>';
                    newContent += '<td>' + e.event.result.isCritical + '</td>';
                    newContent += '<td>' + e.event.threat + '</td>';
                    newContent += '</tr>';
                }
                newContent += '</table>';
                 $('#output').html(newContent);
            }
        };


        xhr.open('POST', '/API/Parse', true);
        xhr.send(file);

    }


    // initialize

    function Init() {

        var fileselect = $id("fileselect"),
                filedrag = $id("filedrag"),
                submitbutton = $id("submitbutton");

        // file select
        fileselect.addEventListener("change", FileSelectHandler, false);

        // is XHR2 available?
        var xhr = new XMLHttpRequest();
        if (xhr.upload) {

            // file drop
            filedrag.addEventListener("dragover", FileDragHover, false);
            filedrag.addEventListener("dragleave", FileDragHover, false);
            filedrag.addEventListener("drop", FileSelectHandler, false);
            filedrag.style.display = "block";
        }

    }

    function loadData() {
        var content = '';
        content += '[03/01/2012 15:00:41] [@@Khantni] [@@Twos] [Sundering Assault {807806038966272}] [RemoveEffect {836045448945478}: Armor Reduced {807806038966564}] ()\r\n';
        content += '[03/01/2012 15:00:56] [@@Khantni] [@@Khantni] [Trauma (PVP) {632923560607744}] [RemoveEffect {836045448945478}: Trauma (PVP) {632923560607744}] ()\r\n';
        content += '[03/01/2012 15:49:44] [@@Khantni] [@@Khantni] [Unnatural Might {1781509484707840}] [RemoveEffect {836045448945478}: Unnatural Might {1781509484707840}] ()\r\n';
        content += '[03/01/2012 15:49:44] [@@Khantni] [@@Khantni] [Unnatural Might {1781509484707840}] [RemoveEffect {836045448945478}: Coordination {1781509484708107}] ()\r\n';
        content += '[03/01/2012 15:49:44] [@@Khantni] [@@Khantni] [Unnatural Might {1781509484707840}] [RemoveEffect {836045448945478}: Hunters Boon {1781509484708111}] ()\r\n';
        content += '[03/01/2012 15:49:44] [@@Khantni] [@@Khantni] [Unnatural Might {1781509484707840}] [RemoveEffect {836045448945478}: Mark of Power {1781509484708115}] ()\r\n';
        $('#combatLog').val(content);
    }
</script>

